[{"C:\\Code\\ifmo\\diploma\\client\\src\\index.js":"1","C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Question.js":"2","C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Nav.js":"3","C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Doctors.js":"4","C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Review.js":"5","C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Header.js":"6","C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Doctor.js":"7","C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Footer.js":"8","C:\\Code\\ifmo\\diploma\\client\\src\\comps\\About.js":"9","C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Home.js":"10","C:\\Code\\ifmo\\diploma\\client\\src\\comps\\DoctorsInput.js":"11","C:\\Code\\ifmo\\diploma\\client\\src\\App.js":"12"},{"size":219,"mtime":1612173038116,"results":"13","hashOfConfig":"14"},{"size":2101,"mtime":1612715043473,"results":"15","hashOfConfig":"14"},{"size":360,"mtime":1612787108093,"results":"16","hashOfConfig":"14"},{"size":859,"mtime":1612532947849,"results":"17","hashOfConfig":"14"},{"size":198,"mtime":1612367007410,"results":"18","hashOfConfig":"14"},{"size":125,"mtime":1612174045582,"results":"19","hashOfConfig":"14"},{"size":258,"mtime":1612366932790,"results":"20","hashOfConfig":"14"},{"size":232,"mtime":1612370910479,"results":"21","hashOfConfig":"14"},{"size":2549,"mtime":1612535252849,"results":"22","hashOfConfig":"14"},{"size":7549,"mtime":1612788251725,"results":"23","hashOfConfig":"14"},{"size":803,"mtime":1612784524332,"results":"24","hashOfConfig":"14"},{"size":566,"mtime":1612787128490,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"1c81uqc",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"37"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Code\\ifmo\\diploma\\client\\src\\index.js",[],["55","56"],"C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Question.js",[],"C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Nav.js",[],"C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Doctors.js",[],"C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Review.js",[],["57","58"],"C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Header.js",[],["59","60"],"C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Doctor.js",[],["61","62"],"C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Footer.js",[],"C:\\Code\\ifmo\\diploma\\client\\src\\comps\\About.js",[],"C:\\Code\\ifmo\\diploma\\client\\src\\comps\\Home.js",["63"],"import { useState, useEffect } from \"react\";\r\n\r\nimport Nav from \"./Nav\";\r\nimport Footer from \"./Footer\";\r\nimport Question from \"./Question\";\r\nimport DoctorsInput from \"./DoctorsInput\";\r\n\r\nconst Home = () => {\r\n  const [questions, setQuestions] = useState([\r\n    {\r\n      id: 0,\r\n      name: \"character\",\r\n      body: \"Опишите характер боли\",\r\n      asw1: \"не болит\",\r\n      asw2: \"болит после еды\",\r\n      asw3: \"болит после холодного\",\r\n      asw4: \"болит после горячего\",\r\n    },\r\n    {\r\n      id: 1,\r\n      name: \"duration\",\r\n      body: \"Опишите длительность боли\",\r\n      asw1: \"не болит\",\r\n      asw2: \"боль проходит почти сразу, после устранения причины\",\r\n      asw3: \"боль длится пару минут\",\r\n      asw4: \"боль долго не проходит\",\r\n    },\r\n    {\r\n      id: 2,\r\n      name: \"regularity\",\r\n      body: \"Опишите регулярность возникновения боли\",\r\n      asw1: \"не болит\",\r\n      asw2: \"болит после приемы пищи/питья\",\r\n      asw3: \"болит само по себе, несколько раз в день, чаще ночью\",\r\n      asw4: \"болит при накусывании на зуб\",\r\n    },\r\n    {\r\n      id: 3,\r\n      name: \"intesity\",\r\n      body: \"Опишите интенсивность боли\",\r\n      asw1: \"не болит\",\r\n      asw2: \"боль жмущая, ноющая, больше раздражает, чем болит\",\r\n      asw3: \"болит умеренно, проходит после приема обезболивающего\",\r\n      asw4: \"болит сильно, боль распирающая, резкая, длительная\",\r\n    },\r\n    {\r\n      id: 4,\r\n      name: \"localisation\",\r\n      body: \"Опишите локализацию боли\",\r\n      asw1: \"не болит\",\r\n      asw2: \"болит в зубе, могу указать зуб\",\r\n      asw3: \"болит в зубе, не могу указать конкретный зуб\",\r\n      asw4: \"болит в челюсти\",\r\n    },\r\n    {\r\n      id: 5,\r\n      name: \"color\",\r\n      body: \"Опишите цвет беспокоящего зуба\",\r\n      asw1: \"не беспокоит\",\r\n      asw2: \"в цвете изменен, серый\",\r\n      asw3: \"в цвете изменен, желтый\",\r\n      asw4: \"в цвете не изменен\",\r\n    },\r\n    {\r\n      id: 6,\r\n      name: \"plaque\",\r\n      body: \"Есть ли налет на зубах\",\r\n      asw1: \"нет\",\r\n      asw2: \"налет черного цвета в придесневой области\",\r\n      asw3: \"налет черный на в сей поверхности зуба\",\r\n      asw4: \"есть зубные камни\",\r\n    },\r\n    {\r\n      id: 7,\r\n      name: \"bleeding\",\r\n      body: \"Есть ли кровоточивость при чистке зубов\",\r\n      asw1: \"нет\",\r\n      asw2: \"есть около одного зуба\",\r\n      asw3: \"есть около 2-3х зубов\",\r\n      asw4: \"есть в области всех зубов\",\r\n    },\r\n    {\r\n      id: 8,\r\n      name: \"condition\",\r\n      body: \"Опишите состояние беспокоящего зуба\",\r\n      asw1: \"зуб цел\",\r\n      asw2: \"есть кариозные полости\",\r\n      asw3: \"болит зуб наполовину разрушен\",\r\n      asw4: \"зуб полностью разрушен/есть только корень\",\r\n    },\r\n    {\r\n      id: 9,\r\n      name: \"length\",\r\n      body: \"Как давно зуб начал беспокоить\",\r\n      asw1: \"день назад\",\r\n      asw2: \"пару недель назад\",\r\n      asw3: \"пару месяцев назад\",\r\n      asw4: \"больше полугода назад\",\r\n    },\r\n  ]);\r\n\r\n  const [doctors, setDoctors] = useState(\"\");\r\n  const [selectedDoctor, setSelectedDoctor] = useState(\"\");\r\n\r\n  const [answers, setAnswers] = useState([]);\r\n  const [fio, setFio] = useState(\"\");\r\n\r\n  const handleAnswers = async (answer) => {\r\n    if (answers.find((ans) => answer.name === ans.name)) {\r\n      answers.map((ans) => {\r\n        if (ans.name === answer.name) {\r\n          ans.num = answer.num;\r\n        }\r\n        return ans;\r\n      });\r\n      setAnswers(answers);\r\n    } else {\r\n      setAnswers([...answers, answer]);\r\n    }\r\n  };\r\n\r\n  const handleChange = (e) => {\r\n    setFio(e.target.value);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const abortCont = new AbortController();\r\n\r\n    fetch(\"http://localhost:5000/api/doctors\", { signal: abortCont.signal })\r\n      .then((x) => x.json())\r\n      .then((doctors) => setDoctors(doctors));\r\n  }, []);\r\n\r\n  const [result, setResult] = useState(\"\");\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const abortCont = new AbortController();\r\n\r\n    fetch(\"http://localhost:5000/api/form\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        \"Content-Type\": \"application/json\",\r\n        \"Access-Control-Allow-Origin\": \"*\",\r\n        signal: abortCont.signal,\r\n      },\r\n      body: JSON.stringify({ answers, selectedDoctor, fio }),\r\n    })\r\n      .then((x) => x.json())\r\n      .then((data) => setResult(data))\r\n      .catch((err) => console.log(err));\r\n  };\r\n\r\n  return (\r\n    <div id=\"home\">\r\n      <Nav />\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <div className=\"upper\">\r\n          <label htmlFor=\"name\" id=\"fioLabel\">\r\n            Ваше ФИО\r\n          </label>\r\n          <input type=\"text\" id=\"fio\" onChange={handleChange} value={fio} />\r\n          <h3>Ваш Врач</h3>\r\n          <div className=\"doctors-inputs\">\r\n            {doctors ? (\r\n              doctors.map((doctor) => (\r\n                <DoctorsInput\r\n                  doctorName={doctor.name}\r\n                  setSelectedDoctor={setSelectedDoctor}\r\n                  key={doctor._id}\r\n                />\r\n              ))\r\n            ) : (\r\n              <div className=\"loading\">Loading...</div>\r\n            )}\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"form\">\r\n          <h2>Форма</h2>\r\n          <ol className=\"form-inputs\">\r\n            {questions.map((question) => (\r\n              <Question\r\n                key={question.id}\r\n                name={question.name}\r\n                body={question.body}\r\n                asw1={question.asw1}\r\n                asw2={question.asw2}\r\n                asw3={question.asw3}\r\n                asw4={question.asw4}\r\n                handleAnswers={handleAnswers}\r\n              />\r\n            ))}\r\n          </ol>\r\n        </div>\r\n        <button>Отправить</button>\r\n      </form>\r\n\r\n      <div className=\"result\">\r\n        {result ? (\r\n          <div className=\"result-inner\">\r\n            <p>\r\n              {result.fio\r\n                ? `Результаты для: ${result.fio}`\r\n                : \"Результаты для: Аноним\"}\r\n            </p>\r\n            <p>\r\n              {result.selectedDoctor\r\n                ? `Ваш врач: ${result.selectedDoctor}`\r\n                : `Ваш врач: еще не выбран`}\r\n            </p>\r\n            <p>{`Ваш предварительный диагноз: ${result.diagnosis.join(\r\n              \", \"\r\n            )}`}</p>\r\n          </div>\r\n        ) : (\r\n          \"\"\r\n        )}\r\n      </div>\r\n\r\n      <Footer />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","C:\\Code\\ifmo\\diploma\\client\\src\\comps\\DoctorsInput.js",[],"C:\\Code\\ifmo\\diploma\\client\\src\\App.js",[],{"ruleId":"64","replacedBy":"65"},{"ruleId":"66","replacedBy":"67"},{"ruleId":"64","replacedBy":"68"},{"ruleId":"66","replacedBy":"69"},{"ruleId":"64","replacedBy":"70"},{"ruleId":"66","replacedBy":"71"},{"ruleId":"64","replacedBy":"72"},{"ruleId":"66","replacedBy":"73"},{"ruleId":"74","severity":1,"message":"75","line":9,"column":21,"nodeType":"76","messageId":"77","endLine":9,"endColumn":33},"no-native-reassign",["78"],"no-negated-in-lhs",["79"],["78"],["79"],["78"],["79"],["78"],["79"],"no-unused-vars","'setQuestions' is assigned a value but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]